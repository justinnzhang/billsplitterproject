{"version":3,"sources":["components/Image.js","steps/Step1.js","steps/Step2.js","steps/Step3a.js","components/RenderSelected.js","components/RenderUnselected.js","components/ChooseRenderer.js","components/FinishButton.js","steps/Step3b.js","components/FinalOrders.js","steps/Step4.js","App.js","serviceWorker.js","index.js"],"names":["Image","props","Fragment","className","title","ServiceName","value","source","src","alt","IMAGES","Step1","currentStep","map","image","onClick","clickAction","key","Step2","useState","itemName","itemPrice","assign","index","inputFields","setInputFields","delivery","setDelivery","service","setService","total","setTotal","taxes","setTaxes","count","setCount","handleSubmit","e","preventDefault","i","values","handleInsert","handleInputChange2","event","target","id","handleInputChange","name","onSubmit","inputField","splice","handleRemoveFields","placeholder","type","intemName","onChange","step","min","defaultValue","push","handleAddFields","Step3a","setName","colStep","handleInputs","handleCurrName","RenderSelected","price","RenderUnselected","ChooseRenderer","totalBill","deliveryFee","handleNameAssign","FinishButton","full","finalStep","message","Step3b","inputs","input","handleContinue","FinalOrders","Step4","assignedOrders","item","items","resetApp","App","handleFinalCalculations","state","names","tempItems","assignedItems","numPeople","j","finalValues","priceAmount","length","Number","serviceFee","taxFee","toFixed","setState","console","log","_next","updateColStep","currName","concat","assignCount","aCount","isFull","tax","currStep","handleStart","handleSelection","_resetApp","currentMessage","_getMessage","this","addItem","handleAddItem","removeItem","handleRemoveItem","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f8206a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Image.css';\r\nimport '../steps/StepCSS.css';\r\n\r\nexport default function Image(props)    {\r\n    return(\r\n        <React.Fragment>\r\n        <div className=\"choice\" title=<ServiceName value={props.source} /> >\r\n            <div className=\"imageHolder\">\r\n                <img src={\"./images/\" + props.source} alt={props.source} className=\"\" />\r\n            </div>\r\n            <h1><ServiceName value={props.source} /></h1>\r\n        </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\nfunction ServiceName(props)    {\r\n    switch (props.value)    {\r\n        case \"ubereats.png\":\r\n            return \"Uber Eats\";\r\n        case \"skipthedishes.png\":\r\n            return \"Skip The Dishes\";\r\n        case \"foodora.png\":\r\n            return \"Foodora\";\r\n        case \"doordash.png\":\r\n            return \"Doordash\";\r\n        default:\r\n            return \"Custom\";\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './StepCSS.css';\r\nimport Image from '../components/Image.js';\r\n\r\nconst IMAGES = [\r\n    \"custom.png\",\r\n    \"ubereats.png\",\r\n    \"skipthedishes.png\",\r\n    \"doordash.png\",\r\n    \"foodora.png\"\r\n];\r\n\r\n{/*Step1 - Service Selection*/}\r\nfunction Step1(props) {\r\n    if (props.currentStep !== 1) {\r\n        return null\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            {IMAGES.map(image => (\r\n                <div onClick={() => props.clickAction(image)} key={image}>\r\n                    <Image source={image} />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Step1\r\n","import React, { useState, Fragment } from 'react';\r\nimport './StepCSS.css';\r\n\r\nconst Step2 = (props) => {\r\n    const [inputFields, setInputFields] = useState([\r\n        { itemName: '', itemPrice: '', assign: 'unassigned', index: -1}\r\n    ]);\r\n\r\n    //Variables to store all the single inputs\r\n    const [ delivery, setDelivery ] = useState();\r\n    const [ service, setService ] = useState();\r\n    const [ total, setTotal ] = useState();\r\n    const [ taxes, setTaxes ] = useState();\r\n\r\n    const [ count, setCount ] = useState(1);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        var i = 0;\r\n        const values = [...inputFields];\r\n\r\n        while (i < count)  {\r\n            values[i].index = i;\r\n            i++;\r\n        }\r\n        props.handleInsert(total, delivery, service, taxes, count, values)\r\n    };\r\n\r\n    /*Handles the input for all fixed values*/\r\n    const handleInputChange2 = (event) => {\r\n        switch (event.target.id)    {\r\n            case \"delivery\":\r\n                setDelivery(event.target.value)\r\n                break;\r\n            case \"taxes\":\r\n                setTaxes(event.target.value)\r\n                break;\r\n            case \"service\":\r\n                setService(event.target.value)\r\n                break;\r\n            default:\r\n                setTotal(event.target.value)\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (index, event) => {\r\n        const values = [...inputFields];\r\n        if (event.target.name === \"itemName\") {\r\n            values[index].itemName = event.target.value;\r\n        } else {\r\n            values[index].itemPrice = event.target.value;\r\n        }\r\n\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleAddFields = () => {\r\n        const values = [...inputFields];\r\n        values.push({ itemName: '', itemPrice: '', assign: 'unassigned' });\r\n        setCount(count + 1);\r\n        setInputFields(values);\r\n    };\r\n\r\n    const handleRemoveFields = index => {\r\n        const values = [...inputFields];\r\n        values.splice(index, 1);\r\n        setCount(count - 1);\r\n        setInputFields(values);\r\n    };\r\n\r\n    if (props.currentStep !== 2)    {\r\n        return null\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"main\">\r\n                <p>Total Items: {count}</p>\r\n                {inputFields.map((inputField, index) => (\r\n                <Fragment key={`${inputField}~${index}`}>\r\n                    <div className=\"fields\">\r\n                        <div className=\"removeButton\" onClick={() => handleRemoveFields(index)}>\r\n                            <h5>REMOVE</h5>\r\n                        </div>\r\n                        <div className=\"itemForm\">\r\n                            <span className=\"label\">Item</span>\r\n                            <input\r\n                                placeholder=\"Enter Item Name Here\"\r\n                                type=\"text\"\r\n\r\n                                className=\"form\"\r\n                                id={inputField.intemName}\r\n                                name=\"itemName\"\r\n                                value={inputField.itemName}\r\n                                onChange={event => handleInputChange(index, event)}\r\n                                />\r\n                        </div>\r\n                        <div className=\"priceForm\">\r\n                            <span className=\"label\">Price</span>\r\n                            <input\r\n                                placeholder=\"Enter Item Price Here\"\r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                min=\"0.00\"\r\n\r\n                                className=\"form\"\r\n                                id={inputField.itemPrice}\r\n                                name=\"itemPrice\"\r\n                                value={inputField.itemPrice}\r\n                                onChange={event => handleInputChange(index, event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n                ))}\r\n            </div>\r\n            <div className=\"fields fees\">\r\n                <div className=\"fees\">\r\n                    <span className=\"label\">Taxes</span>\r\n                    <input\r\n                        type=\"number\"\r\n\r\n                        step=\"0.01\"\r\n                        min=\"0.00\"\r\n                        className=\"form\"\r\n                        id=\"taxes\"\r\n                        name=\"taxes\"\r\n                        value={taxes}\r\n                        onChange={e => handleInputChange2(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"fees\">\r\n                    <span className=\"label\">Delivery Fee</span>\r\n                    <input\r\n                        type=\"number\"\r\n\r\n                        step=\"0.01\"\r\n                        min=\"0.00\"\r\n                        className=\"form\"\r\n                        id=\"delivery\"\r\n                        name=\"delivery\"\r\n                        value={delivery}\r\n                        onChange={e => handleInputChange2(e)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"fees\">\r\n                    <span className=\"label\">Service Fee</span>\r\n                    <input\r\n                        type=\"number\"\r\n                        defaultValue=\"\"\r\n                        step=\"0.01\"\r\n                        min=\"0.00\"\r\n                        className=\"form\"\r\n                        id=\"service\"\r\n                        name=\"service\"\r\n                        value={service}\r\n                        onChange={e => handleInputChange2(e)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"fields total\">\r\n                <div className=\"\">\r\n                    <span className=\"label\">Order Total</span>\r\n                    <input\r\n                        type=\"number\"\r\n                        defaultValue=\"\"\r\n                        step=\"0.01\"\r\n                        min=\"0.00\"\r\n                        className=\"form\"\r\n                        id=\"total\"\r\n                        name=\"total\"\r\n                        value={total}\r\n                        onChange={e => handleInputChange2(e)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <button\r\n                className=\"submitButton\"\r\n                type=\"submit\"\r\n                onSubmit={handleSubmit}\r\n            >Next</button>\r\n\r\n            <div className=\"addbutton\" onClick={() => handleAddFields()}>\r\n                <h6>+</h6>\r\n            </div>\r\n        </form>\r\n  )\r\n}\r\n\r\nexport default Step2;\r\n","import React, { useState } from 'react';\r\nimport '../steps/StepCSS.css';\r\n\r\n\r\nconst Step3a = (props) => {\r\n    const [ name, setName ] = useState('');\r\n\r\n    const handleInputs = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n\r\n    const submitName = e =>    {\r\n        e.preventDefault();\r\n        props.handleCurrName(name);\r\n    };\r\n\r\n    if (props.colStep === false || props.currentStep !== 3)    {\r\n        return null;\r\n    }\r\n    else {\r\n        return(\r\n            <div className=\"fields\">\r\n                <input\r\n                    type=\"Text\"\r\n                    defaultValue=\"\"\r\n                    className=\"form name-input\"\r\n                    name=\"nameInput\"\r\n                    onChange={event => handleInputs(event)}\r\n                />\r\n                <button\r\n                    onClick={submitName}\r\n                    className=\"submitButton name-submit\"\r\n                >Submit</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Step3a\r\n","import React from 'react';\r\nimport './Selected.css';\r\n\r\n{/*Step3 - Person to split to selection*/}\r\nexport default function RenderSelected(props) {\r\n    return(\r\n        <div className=\"item selected\">\r\n            <h3>{props.name}</h3>\r\n            <p>${props.price}</p>\r\n            <p>Who: {props.assign}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './Selected.css';\r\n\r\n{/*Step3 - Person to split to selection*/}\r\nexport default function RenderUnselected(props) {\r\n    return(\r\n        <div className=\"item unselected\">\r\n            <h3>{props.name}</h3>\r\n            <p>${props.price}</p>\r\n            <p>Who: {props.assign}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport RenderSelected from './RenderSelected.js';\r\nimport RenderUnselected from './RenderUnselected.js';\r\n\r\nexport default function ChooseRenderer(props) {\r\n\r\n    var option = null;\r\n\r\n    if (props.assign === 'unassigned')\r\n        option = (\r\n            <RenderUnselected\r\n                name={props.name}\r\n                price={props.price}\r\n                assign={props.assign}\r\n                total={props.totalBill}\r\n                delivery={props.deliveryFee}\r\n                index={props.index}\r\n\r\n                handleNameAssign={props.handleNameAssign}\r\n            />\r\n        );\r\n    else\r\n        option = (\r\n            <RenderSelected\r\n                name={props.name}\r\n                price={props.price}\r\n                assign={props.assign}\r\n                total={props.totalBill}\r\n                delivery={props.deliveryFee}\r\n                index={props.index}\r\n\r\n                handleNameAssign={props.handleNameAssign}\r\n            />\r\n        );\r\n\r\n    return option\r\n};\r\n","import React from 'react';\r\nimport './button.css';\r\n\r\nexport default function FinishButton(props)  {\r\n    if (!props.full) {\r\n        return null\r\n    }\r\n    return(\r\n        <button className=\"submitButton name-submit\" onClick={() => props.finalStep()}>{props.message}</button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './StepCSS.css';\r\nimport ChooseRenderer from '../components/ChooseRenderer.js';\r\nimport FinishButton from '../components/FinishButton.js';\r\n\r\n{/*Step3 - Person to split to selection*/}\r\nconst Step3b = (props) => {\r\n\r\n    if (props.colStep === true || props.currentStep !== 3) {\r\n        return null\r\n    }\r\n    else {\r\n        return(\r\n            <React.Fragment>\r\n                {props.inputs.map((input) => (\r\n                    <div onClick={() => props.handleNameAssign(input.index)}>\r\n                        <ChooseRenderer\r\n                            name={input.itemName}\r\n                            price={input.itemPrice}\r\n                            assign={input.assign}\r\n                            total={props.totalBill}\r\n                            delivery={props.deliveryFee}\r\n                            index={input.index}\r\n                        />\r\n                    </div>\r\n                ))}\r\n                <button className=\"submitButton name-submit\" onClick={() => props.handleContinue()}>Next Person</button>\r\n                <FinishButton finalStep={props.finalStep} full={props.full} message={\"Split it!\"} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Step3b\r\n","import React from 'react';\r\nimport '../steps/StepCSS.css';\r\n\r\nexport default function FinalOrders(props)   {\r\n    return(\r\n        <div className=\"item\">\r\n            <h1>{props.name}</h1>\r\n            <p>${props.total}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport FinalOrders from '../components/FinalOrders.js';\r\nimport './StepCSS.css';\r\n\r\nconst Step4 = (props) =>   {\r\n    if (props.currentStep !== 4)  {\r\n        return null\r\n    }\r\n    return  (\r\n        <React.Fragment>\r\n            {props.assignedOrders.map((item) => (\r\n                <FinalOrders name={item.name} items={item.items} total={item.total} />\r\n            ))}\r\n        <button className=\"submitButton name-submit\" onClick={() => props.resetApp()}>Another order</button>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Step4\r\n","import React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\n\nimport Step1 from './steps/Step1.js';\nimport Step2 from './steps/Step2.js';\nimport Step3a from './steps/Step3a.js';\nimport Step3b from './steps/Step3b.js';\nimport Step4 from './steps/Step4.js';\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentStep: 1,\n            currentMessage: \"Please select your service. If not available, select 'custom'\",\n            service:  '',\n            totalBill: 0,\n            deliveryFee: 0,\n            serviceFee: 0,\n            taxFee: 0,\n            count: 0,\n            inputs: null,\n\n            /*used for final item assignments*/\n            currName: '',\n            colStep: true,\n            numPeople: 0,\n            assignCount: 0,\n            full: false,\n\n            /*\n                Used to store final assigned orders by person\n            */\n            names: [],\n            assignedOrders: []\n        }\n    }\n\n    handleFinalCalculations = () => {\n        let values = {...this.state.inputs}\n        let names  = {...this.state.names}\n\n        var tempItems = []\n        var assignedItems = []\n\n        for (let i = 0; i < this.state.numPeople; ++i) {\n            tempItems = []\n            for (let j = 0; j < this.state.count; ++j) {\n                if (values[j].assign === names[i])    {\n                    tempItems.push({\n                        itemName: values[j].itemName,\n                        itemPrice: values[j].itemPrice\n                    })\n                }\n            }\n\n            assignedItems.push({\n                name: names[i],\n                items: tempItems,\n                total: 0\n            })\n        }\n\n        let finalValues = {...assignedItems}\n        var priceAmount = 0\n\n        for (let i = 0; i < this.state.numPeople; ++i)  {\n            priceAmount = 0\n            for (let j = 0; j < finalValues[i].items.length; ++j) {\n                priceAmount = priceAmount + Number(finalValues[i].items[j].itemPrice)\n            }\n            priceAmount = Number(priceAmount) +  Number(this.state.deliveryFee / this.state.numPeople)\n            priceAmount = Number(priceAmount) + Number(this.state.serviceFee / this.state.numPeople)\n            priceAmount = Number(priceAmount) + Number(this.state.taxFee / this.state.numPeople)\n\n            assignedItems[i].total = Number(priceAmount.toFixed(2))\n        }\n\n        this.setState({\n            assignedOrders: assignedItems\n        }, () => {console.log(this.state.assignedOrders)} )\n\n        this._next();\n    }\n\n    handleCurrName = (name) => {\n        this.updateColStep()\n        this.setState({\n            currName: name,\n            numPeople: this.state.numPeople + 1,\n            names: this.state.names.concat(name)\n        })\n    }\n\n    updateColStep = () =>   {\n        if (this.state.colStep)\n            this.setState({ colStep: false })\n        else\n            this.setState({ colStep: true })\n    }\n\n    handleContinue = () => {\n        this.updateColStep()\n\n        if (this.state.count === this.state.assignCount)\n            this.setState({\n                full: true\n            })\n    }\n\n    /*Handles each time Step3 updates the assign of a variable*/\n    handleNameAssign = (index) =>  {\n        let values = {...this.state.inputs}\n        let aCount = this.state.assignCount\n        let isFull = false\n\n        if (values[index].assign === 'unassigned')\n            aCount = aCount + 1\n        if (aCount === this.state.count)\n            isFull = true\n\n        values[index].assign = this.state.currName\n        this.setState({\n            assignCount: aCount,\n            full: isFull\n        })\n    }\n\n    /*Handling input of deliveryFee, serviceFee, and totalBill*/\n    handleInsert = (total, delivery, service, tax, count, items) => {\n        let currStep = this.state.currentStep\n        this.setState({\n            currentStep: currStep,\n            totalBill: total,\n            deliveryFee: delivery,\n            serviceFee: service,\n            taxFee: tax,\n            count: count,\n            inputs: items\n        })\n        this._next()\n    }\n\n    /*Handles the starting of the program*/\n    handleStart = (name) =>  {\n        this.handleSelection(name)\n        this._next()\n    }\n\n    handleSelection = (name) =>  {\n        switch (name)   {\n            case \"ubereats.png\":\n                this.setState({\n                    service: \"Uber Eats\"\n                })\n                break;\n            case \"skipthedishes.png\":\n                this.setState({\n                    service: \"Skip The Dishes\"\n                })\n                break;\n            case \"foodora.png\":\n                this.setState({\n                    service: \"Foodora\"\n                })\n                break;\n            case \"doordash.png\":\n                this.setState({\n                    service: \"Doordash\"\n                })\n                break;\n            default:\n                this.setState({\n                    service: \"Custom\"\n                })\n        }\n    }\n\n    _resetApp = () =>   {\n        //Resetting the app\n        this.setState({\n            currentStep: 1,\n            currentMessage: \"Please select your service. If not available, select 'custom'\",\n            service:  '',\n            totalBill: 0,\n            deliveryFee: 0,\n            serviceFee: 0,\n            taxFee: 0,\n            count: 0,\n            inputs: null,\n\n            currName: '',\n            colStep: true,\n            numPeople: 0,\n            assignCount: 0,\n            full: false,\n\n            names: [],\n            assignedOrders: []\n        })\n    }\n\n    //Sets the message to be printed at the top of the screen everytime\n    _getMessage = (currStep) => {\n        switch (currStep)   {\n            case 1:\n                this.setState({\n                    currentMessage: \"Please select your service. If not available, select 'custom'\"\n                })\n                break;\n            case 2:\n                this.setState({\n                    currentMessage: \"Enter in the items that you've ordered\"\n                })\n                break;\n            case 3:\n                this.setState({\n                    currentMessage: \"Enter each person's name and select which items they ordered\"\n                })\n                break;\n            default:\n                this.setState({\n                    currentMessage: \"Here is your split bill\"\n                })\n        }\n    }\n\n    //Gets the next step\n    _next = () => {\n        let currentStep = this.state.currentStep\n        currentStep = currentStep >= 3? 4: currentStep + 1\n        this._getMessage(currentStep)\n        this.setState({\n            currentStep: currentStep\n        })\n    }\n\n    render()  {\n      return (\n        <div className=\"App\">\n            <div className=\"centerR\">\n                <div className=\"header\">\n                    <h>Delivery Bill Splitter</h>\n                    <p>{this.state.currentMessage}</p>\n                </div>\n\n                <div className=\"mainForm\">\n\n                    <Step1\n                        currentStep={this.state.currentStep}\n                        service={this.state.service}\n                        clickAction={this.handleStart}\n                    />\n\n                    <Step2\n                        currentStep={this.state.currentStep}\n                        handleInsert={this.handleInsert}\n                        service={this.state.service}\n                        clickAction={this.handleStart}\n                        addItem={this.handleAddItem}\n                        removeItem={this.handleRemoveItem}\n                        items={this.state.items}\n                    />\n\n                    <Step3a\n                        currentStep={this.state.currentStep}\n                        totalBill={this.state.totalBill}\n                        deliveryFee={this.state.deliveryFee}\n                        serviceFee={this.state.serviceFee}\n                        taxFee={this.state.taxFee}\n                        inputs={this.state.inputs}\n                        count={this.state.count}\n\n                        handleCurrName={this.handleCurrName}\n                        colStep={this.state.colStep}\n                    />\n\n                    <Step3b\n                        currentStep={this.state.currentStep}\n                        totalBill={this.state.totalBill}\n                        deliveryFee={this.state.deliveryFee}\n                        serviceFee={this.state.serviceFee}\n                        taxFee={this.state.taxFee}\n                        inputs={this.state.inputs}\n                        count={this.state.count}\n                        currName={this.state.currName}\n                        handleContinue={this.handleContinue}\n\n                        handleNameAssign={this.handleNameAssign}\n                        colStep={this.state.colStep}\n                        finalStep={this.handleFinalCalculations}\n                        full={this.state.full}\n                    />\n\n                    <Step4\n                        currentStep={this.state.currentStep}\n                        assignedOrders={this.state.assignedOrders}\n                        resetApp={this._resetApp}\n                    />\n\n                </div>\n\n                <div className=\"footer\">\n                    <p>Made by Justin Zhang</p>\n                </div>\n\n            </div>\n        </div>\n      );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}